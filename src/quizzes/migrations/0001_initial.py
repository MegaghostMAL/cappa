# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-06-07 18:40
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import src.utils.fields
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('langs', '0004_auto_20200607_1840'),
        ('tasks', '0005_auto_20200607_1840'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show', models.BooleanField(default=True, verbose_name='отображать')),
                ('title', models.CharField(max_length=255, verbose_name='заголовок')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='слаг')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='дата/время окончения решения задач в формате UTC')),
                ('about', tinymce.models.HTMLField(blank=True, default='', null=True, verbose_name='краткое описание')),
                ('content', tinymce.models.HTMLField(blank=True, default='', null=True, verbose_name='текстовый контент')),
                ('order_key', src.utils.fields.OrderField(blank=True, null=True, verbose_name='порядок')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='дата последнего изменения')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='автор')),
                ('lang', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='langs.Lang', verbose_name='язык программирования')),
            ],
            options={
                'verbose_name': 'Самостоятельная работа',
                'verbose_name_plural': 'самостоятельные работы',
                'ordering': ['order_key'],
            },
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(blank=True, null=True, verbose_name='дата/время отправки')),
                ('is_count', models.BooleanField(default=True, verbose_name='баллы идут в зачет')),
                ('is_locked', models.BooleanField(default=False, verbose_name='запрещено изменять')),
                ('manual_status', models.CharField(choices=[('0', 'нет'), ('1', 'ожидает проверки'), ('2', 'в процессе проверки'), ('3', 'проверено')], default='0', max_length=255, verbose_name='статус проверки преподавателем')),
                ('manual_score', models.FloatField(blank=True, null=True, verbose_name='оценка преподавателя')),
                ('tests_score', models.FloatField(blank=True, null=True, verbose_name='оценка по автотестам')),
                ('last_changes', models.TextField(blank=True, default='', verbose_name='последние изменения')),
                ('content', models.TextField(blank=True, default='', verbose_name='листинг решения')),
                ('version_list', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list, null=True, verbose_name='список сохраненных решений')),
                ('comment', tinymce.models.HTMLField(blank=True, null=True, verbose_name='комментарий к решению')),
            ],
            options={
                'verbose_name': 'решение задачи',
                'verbose_name_plural': 'решения задач',
            },
        ),
        migrations.CreateModel(
            name='TaskItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show', models.BooleanField(default=True, verbose_name='отображать')),
                ('max_score', models.PositiveIntegerField(default=5, verbose_name='балл за решение')),
                ('manual_check', models.BooleanField(default=False, verbose_name='ручная проверка')),
                ('compiler_check', models.BooleanField(default=True, verbose_name='проверка автотестами')),
                ('slug', src.utils.fields.SlugField(blank=True, max_length=255, null=True, verbose_name='слаг')),
                ('langg', models.CharField(blank=True, choices=[('python', 'Python3'), ('cpp', 'C++'), ('csharp', 'C#')], max_length=255, null=True, verbose_name='язык')),
                ('number', models.PositiveIntegerField(blank=True, null=True, verbose_name='порядковый номер')),
                ('order_key', src.utils.fields.OrderField(blank=True, null=True, verbose_name='порядок')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_taskitems', to='quizzes.Quiz', verbose_name='самостоятельная работа')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quizzes', to='tasks.Task', verbose_name='задача')),
            ],
            options={
                'verbose_name': 'задача',
                'verbose_name_plural': 'задачи',
                'ordering': ['order_key'],
            },
        ),
        migrations.AddField(
            model_name='solution',
            name='taskitem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solutions', to='quizzes.TaskItem', verbose_name='задача'),
        ),
        migrations.AddField(
            model_name='solution',
            name='teacher',
            field=models.ForeignKey(blank=True, help_text='заполняется автоматически, когда преподаватель выставляет оценку', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='controlled_solutions_quizzes', to=settings.AUTH_USER_MODEL, verbose_name='преподаватель'),
        ),
        migrations.AddField(
            model_name='solution',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_solution_quizzes', to=settings.AUTH_USER_MODEL, verbose_name='пользователь'),
        ),
    ]
